################################################################
filename: 01- Prod envornment starter.txt
Author: Shekhar
Created: 2025-05-05 16:48:59
Version: 1.0
Description: Starter file of Kubernetes production setup
Reference Link: https://kubernetes.io/docs/setup/production-environment/
History: 
################################################################

################################################################
Index
1. 
2. 


################################################################
Production cluster setup
#########################
In a production-quality Kubernetes cluster:
  > the control plane manages the cluster from services that can be spread across multiple computers in different ways.
  > Each worker node, however, represents a single entity that is configured to run Kubernetes pods.

################################################################
Production control plane
#########################
 > The simplest Kubernetes cluster has the entire control plane and worker node services running on the same machine.
 > You can grow that environment by adding worker nodes

Consider these steps:
  1. Choose deployment tools:
    > You can deploy a control plane using tools such as kubeadm, kops, and kubespray.
    
  2. Manage certificates:
    > Secure communications between control plane services are implemented using certificates.
    > Certificates are automatically generated during deployment.
    > you can generate them using your own certificate authority.

  3. Configure load balancer for apiserver:
    > Configure a load balancer to distribute external API requests to the apiserver service instances running on different nodes.

  4. Separate and backup etcd service:

  5. Create multiple control plane systems:
    > For high availability, the control plane should not be limited to a single machine.
    > If the control plane services are run by an init service (such as systemd), each service should run on at least three machines.
  
  6. Span multiple zones:
    > If keeping your cluster available at all times is critical
    > Consider creating a cluster that runs across multiple data centers, referred to as zones in cloud environments.
    > Groups of zones are referred to as regions.
    > By spreading a cluster across multiple zones in the same region, it can improve the chances that your cluster will continue to function even if one zone becomes unavailable.

  7. Manage on-going features:
    > Adminstration task like update.

################################################################
Production worker nodes
#########################

################################################################


################################################################

################################################################
