#####################################################################
filename  : 01-routing.txt
Author    : Shekhar
Created   : 21-May-2025
Version   : 1.0
Description: flask routing
Reference Link: https://flask.palletsprojects.com/en/stable/quickstart/#a-minimal-application
History   : 
#####################################################################

#####################################################################
Index
1. Routing.txt
2. Variable Rules
3. Unique URLs / Redirection Behavior
#####################################################################
Routing.txt
##########

Routing

Use the route() decorator to bind a function to a URL.

@app.route('/')
def index():
    return 'Index Page'

@app.route('/hello')
def hello():
    return 'Hello, World'

#####################################################################
Variable Rules

    > You can add variable sections to a URL by marking sections with <variable_name>.
    > Your function then receives the <variable_name> as a keyword argument.
    > you can use a converter to specify the type of the argument like <converter:variable_name>.

from markupsafe import escape

@app.route('/user/<username>')
def show_user_profile(username):
    # show the user profile for that user
    return f'User {escape(username)}'

@app.route('/post/<int:post_id>')
def show_post(post_id):
    # show the post with the given id, the id is an integer
    return f'Post {post_id}'

@app.route('/path/<path:subpath>')
def show_subpath(subpath):
    # show the subpath after /path/
    return f'Subpath {escape(subpath)}'

Converter types:

string (default) accepts any text without a slash
int : accepts positive integers
float : accepts positive floating point values
path : like string but also accepts slashes
uuid : accepts UUID strings


#####################################################################
Unique URLs / Redirection Behavior

The following two rules differ in their use of a trailing slash.

@app.route('/projects/')
def projects():
    return 'The project page'

@app.route('/about')
def about():
    return 'The about page'

> The canonical URL for the projects endpoint has a trailing slash.
> It’s similar to a folder in a file system. 
> If you access the URL without a trailing slash (/projects), 
    > Flask redirects you to the canonical URL with the trailing slash (/projects/).

> The canonical URL for the about endpoint does not have a trailing slash.
> It’s similar to the pathname of a file. 
> Accessing the URL with a trailing slash (/about/) produces a 404 “Not Found” error. 

#####################################################################
